@startuml CardGame
class Card{
  +{static} list Cards
}
class Cards{
  +list<Card> DefineTrump()
}
note top of Cards
  listはenum型で定義
end note
class GameStarting{
  -bool boolean_game_srtarting
  +list<GameOject> waitng_object
  +void shuffle()
  +list<list<Cards>> deal()
  +void start_game()
}
class DealingCards{
  +list<list<Cards>> deal()
}
interface Ishuffling{
  +void shuffle()
}
interface Idealing{
  +list<list<Cards>> deal()
}
abstract class Player{
  void draw()
  +list<Cards> throw_card()
  +list<Cards> shuffle()
  void end_turn()
}
class MyCharacter{
  +list<Cards> hand_cards
  +void draw()
  +void wait_time()
  +list<Cards> throw_card()
  +list<Cards> shuffle()
  +void end_turn()
}
class EnemyCharacter{
  +list<Cards> hand_cards
  +void draw()
  +list<Cards> throw_card()
  +list<Cards> shuffle()
  +void end_turn()
}
class TurnManeger{
  +void chage_turn()
  +void end_game()
}
interface IDrawing{
  +void draw()
}
interface IEnd_game{
  +void end_game()
}
interface IEnd_turn{
  +void end_turn()
}
GameStarting..>Ishuffling
GameStarting..>Idealing
GameStarting-->DealingCards
MyCharacter..>Player
EnemyCharacter..>Player
TurnManeger..>IEnd_game
Player..>IDrawing
Player..>IEnd_turn
Player..>Ishuffling
MyCharacter-->TurnManeger
EnemyCharacter-->TurnManeger
GameStarting-->Cards
Cards-->Card
@enduml