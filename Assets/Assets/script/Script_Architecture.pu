@startuml CardGame

class Cards{
  +{static} list Cards
  +list DefineTrump()
}
note top of Cards
  listはenum型で定義
end note
class GameStarting{
  -bool BooleanGameStart
  +list<GameOject> WaitngObject
  +void shuffle()
  +void deal()
  +void GameStart()
}
interface Ishuffling{
  +void shuffle()
}
interface Idealing{
  +deal(list<GameOject> player)
}
abstract class Player{
  void draw()
  void throwCard()
  void shuffle()
  void end_turn()
}
class MyCharacter{
  +void draw()
  +void wait_time()
  +void throwCard()
  +void shuffle()
  +void end_turn()
}
class EnemyCharacter{
  +void draw()
  +void throwCard()
  +void shuffle()
  +void end_turn()
}
class TurnManeger{
  +void chageTurn()
  +void end_game()
}
interface IDrawing{
  +void draw()
}
interface IThorwing{
  +void throwCard()
}
interface IEnd_game{
  +void end_game()
}
interface IEnd_turn{
  +void end_turn()
}
GameStarting..>Ishuffling
GameStarting..>Idealing
MyCharacter..>Player
EnemyCharacter..>Player
TurnManeger..>IEnd_game
Player..>IDrawing
Player..>IThorwing
Player..>IEnd_turn
Player..>Ishuffling
MyCharacter-EnemyCharacter
MyCharacter-->TurnManeger
EnemyCharacter-->TurnManeger
GameStarting-->Cards
@enduml